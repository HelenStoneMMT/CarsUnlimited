@using CarsUnlimited.Web.Data
@inject CartService CartService

@inject ProtectedSessionStorage storage

<div class="container">
    <nav class="navbar navbar-expand-md navbar-dark bg-dark fixed-top">
        <a class="navbar-brand" href="#">Cars Unlimited</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExampleDefault" aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarsExampleDefault">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="cars">
                        Cars
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="cart">
                        Cart (@CartItemCount)
                    </NavLink>
                </li>
            </ul>
        </div>
    </nav>
</div>

@code {
    public int CartItemCount { get; set; } = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var sessionId = await storage.GetAsync<string>("SessionId");

        CartItemCount = await CartService.GetItemsInCartCountAsync(sessionId.Value);

        StateHasChanged();
    }
}